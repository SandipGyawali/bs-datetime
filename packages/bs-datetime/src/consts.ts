import type { MappingValue } from "./types";
import { cumulativeSum } from "./utils";

const MAPPINGS = new Map(
  Object.entries({
    2000: {
      startTime: -843198300000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2001: {
      startTime: -811662300000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2002: {
      startTime: -780126300000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2003: {
      startTime: -748590300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2004: {
      startTime: -716967900000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2005: {
      startTime: -685431900000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2006: {
      startTime: -653895900000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2007: {
      startTime: -622359900000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2008: {
      startTime: -590737500000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
    },
    2009: {
      startTime: -559201500000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2010: {
      startTime: -527665500000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2011: {
      startTime: -496129500000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2012: {
      startTime: -464507100000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
    },
    2013: {
      startTime: -432971100000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2014: {
      startTime: -401435100000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2015: {
      startTime: -369899100000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2016: {
      startTime: -338276700000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
    },
    2017: {
      startTime: -306740700000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2018: {
      startTime: -275204700000,
      months: [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2019: {
      startTime: -243668700000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2020: {
      startTime: -212046300000,
      months: [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2021: {
      startTime: -180510300000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2022: {
      startTime: -148974300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
    },
    2023: {
      startTime: -117438300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2024: {
      startTime: -85815900000,
      months: [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2025: {
      startTime: -54279900000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2026: {
      startTime: -22743900000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2027: {
      startTime: 8878500000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2028: {
      startTime: 40414500000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2029: {
      startTime: 71950500000,
      months: [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],
    },
    2030: {
      startTime: 103486500000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2031: {
      startTime: 135108900000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2032: {
      startTime: 166644900000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2033: {
      startTime: 198180900000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2034: {
      startTime: 229716900000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2035: {
      startTime: 261339300000,
      months: [30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
    },
    2036: {
      startTime: 292875300000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2037: {
      startTime: 324411300000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2038: {
      startTime: 355947300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2039: {
      startTime: 387569700000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
    },
    2040: {
      startTime: 419105700000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2041: {
      startTime: 450641700000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2042: {
      startTime: 482177700000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2043: {
      startTime: 513800100000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
    },
    2044: {
      startTime: 545336100000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2045: {
      startTime: 576872100000,
      months: [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2046: {
      startTime: 608408100000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2047: {
      startTime: 640030500000,
      months: [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2048: {
      startTime: 671566500000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2049: {
      startTime: 703102500000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
    },
    2050: {
      startTime: 734638500000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2051: {
      startTime: 766260900000,
      months: [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2052: {
      startTime: 797796900000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2053: {
      startTime: 829332900000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
    },
    2054: {
      startTime: 860868900000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2055: {
      startTime: 892491300000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2056: {
      startTime: 924027300000,
      months: [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],
    },
    2057: {
      startTime: 955563300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2058: {
      startTime: 987185700000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2059: {
      startTime: 1018721700000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2060: {
      startTime: 1050257700000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2061: {
      startTime: 1081793700000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2062: {
      startTime: 1113416100000,
      months: [30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],
    },
    2063: {
      startTime: 1144952100000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2064: {
      startTime: 1176488100000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2065: {
      startTime: 1208024100000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2066: {
      startTime: 1239646500000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],
    },
    2067: {
      startTime: 1271182500000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2068: {
      startTime: 1302718500000,
      months: [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2069: {
      startTime: 1334254500000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2070: {
      startTime: 1365876900000,
      months: [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],
    },
    2071: {
      startTime: 1397412900000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2072: {
      startTime: 1428948900000,
      months: [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2073: {
      startTime: 1460484900000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
    2074: {
      startTime: 1492107300000,
      months: [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2075: {
      startTime: 1523643300000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2076: {
      startTime: 1555179300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
    },
    2077: {
      startTime: 1586715300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2078: {
      startTime: 1618337700000,
      months: [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2079: {
      startTime: 1649873700000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],
    },
    2080: {
      startTime: 1681409700000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],
    },
    2081: {
      startTime: 1712945700000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],
    },
    2082: {
      startTime: 1744568100000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2083: {
      startTime: 1776104100000,
      months: [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2084: {
      startTime: 1807640100000,
      months: [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2085: {
      startTime: 1839176100000,
      months: [31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30],
    },
    2086: {
      startTime: 1870798500000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2087: {
      startTime: 1902334500000,
      months: [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],
    },
    2088: {
      startTime: 1933956900000,
      months: [30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],
    },
    2089: {
      startTime: 1965492900000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2090: {
      startTime: 1997028900000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2091: {
      startTime: 2028564900000,
      months: [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],
    },
    2092: {
      startTime: 2060187300000,
      months: [30, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2093: {
      startTime: 2091723300000,
      months: [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2094: {
      startTime: 2123259300000,
      months: [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2095: {
      startTime: 2154795300000,
      months: [31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30],
    },
    2096: {
      startTime: 2186417700000,
      months: [30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],
    },
    2097: {
      startTime: 2217867300000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],
    },
    2098: {
      startTime: 2249489700000,
      months: [31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 29, 31],
    },
    2099: {
      startTime: 2281025700000,
      months: [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],
    },
  }).map(([k, v]) => {
    /**
     * Get the cumulative sum of each month data. This could be hardcoded but it's an
     * inexpensive operation and is pretty fast, it is calculated when needed.
     *
     * Example:
     * Cumulative Sum of [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31]
     * is [31, 63, 94, 126, 157, 187, 217, 247, 276, 306, 335, 366]
     */
    return [+k, { ...v, cMonths: cumulativeSum(v.months) }];
  })
) as Map<number, MappingValue>;

// using map instead of String.padStart because of performance reasons
const PAD_MAP: Record<number, string> = {
  0: "00",
  1: "01",
  2: "02",
  3: "03",
  4: "04",
  5: "05",
  6: "06",
  7: "07",
  8: "08",
  9: "09",
  10: "10",
  11: "11",
  12: "12",
  13: "13",
  14: "14",
  15: "15",
  16: "16",
  17: "17",
  18: "18",
  19: "19",
  20: "20",
  21: "21",
  22: "22",
  23: "23",
  24: "24",
  25: "25",
  26: "26",
  27: "27",
  28: "28",
  29: "29",
  30: "30",
  31: "31",
  32: "32",
};

const YEARS = [...MAPPINGS.keys()].map((i) => +i).sort((a, b) => a - b);
const MAX_YEAR = YEARS.at(-1)!;
const MIN_YEAR = YEARS.at(0)!;

const CALENDAR_LABELS = {
  months: {
    en: {
      full: [
        "Baisakh",
        "Jestha",
        "Asar",
        "Shrawan",
        "Bhadra",
        "Aswin",
        "Kartik",
        "Mangsir",
        "Poush",
        "Magh",
        "Falgun",
        "Chaitra",
      ],
      short: [
        "Bai",
        "Jes",
        "Asa",
        "Shr",
        "Bhd",
        "Asw",
        "Kar",
        "Man",
        "Pou",
        "Mag",
        "Fal",
        "Cha",
      ],
    },
    np: {
      full: [
        "बैशाख",
        "जेठ",
        "असार",
        "श्रावण",
        "भाद्र",
        "आश्विन",
        "कार्तिक",
        "मंसिर",
        "पौष",
        "माघ",
        "फाल्गुण",
        "चैत्र",
      ],
      short: [
        "बै",
        "जे",
        "अ",
        "श्रा",
        "भा",
        "आ",
        "का",
        "मं",
        "पौ",
        "मा",
        "फा",
        "चै",
      ],
    },
  },
  weekdays: {
    en: {
      full: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ],
      short: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    },
    np: {
      full: [
        "आइतबार",
        "सोमबार",
        "मंगलबार",
        "बुधबार",
        "बिहिबार",
        "शुक्रबार",
        "शनिबार",
      ],
      short: ["आइत", "सोम", "मंगल", "बुध", "बिहि", "शुक्र", "शनि"],
    },
  },
  numbers: {
    np: ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"],
  },
};

export { MAPPINGS, YEARS, MAX_YEAR, MIN_YEAR, PAD_MAP, CALENDAR_LABELS };
